<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>

	<MissionType UNID="&msCMVolunteer03;"
			name=				"Commonwealth Volunteer 03: Rescue Freighter"
			attributes=			"commonwealthMilitia, commonwealthVolunteer, eridaniScript, metropolisMilitia, rank0"

			level=						"1-4"
			maxAppearing=				"2-4"

			failureOnReturnToSystem=	"900"
			>
		<Properties>
			<Constant id="rpg.showInProgressOnDock">True</Constant>

			<Variant id="destDist">(random 200 250)</Variant>
			<Variant id="destClass">
				&scAntaresII;
			</Variant>

			<Variant id="character.missionGiver">
				(typ@ &msCMVolunteer01; 'militiaCaptain)
			</Variant>

			<Data id="destID"></Data>
			<Data id="enemiesLeft"></Data>
			<Variant id="reward">
				(@ (typ@ &unidCommonwealthMilitia; 'volunteerRewardTable) (min (sysGetLevel) 10))
			</Variant>
			<Variant id="rewardBonus">
				(divide (@ (typ@ &unidCommonwealthMilitia; 'volunteerRewardTable) (min (sysGetLevel) 10)) 2)
			</Variant>

			<!-- rejuvTankStatus 

				One of:

					'transport: Patient is being transported by the player
					'rescued: Patient has arrived at metropolis
					'dead: Patient is dead
			
			-->

			<Data id="rejuvTankStatus"></Data>
			<Data id="rejuvTankMsg"></Data>

			<!-- status
			
				One of the following:

					'respond: Player must dock with ship in trouble.
					'transport: Take rejuv tank back to Commonwealth metropolis.
					'defend: Defend the freighter from attack.

					'defended: Mission success: Freighter defended.
					'destroyed: Mission failure: Freighter was destroyed.
					'destroyedByPlayer: Mission failure: Freighter was destroyed by player.
			-->

			<Data id="status"></Data>
		</Properties>

		<Image imageID="&rsCommonwealthMilitiaInsignia;" imageX="0" imageY="0" imageWidth="256" imageHeight="256"/>

		<Events>
			<!-- CREATE MISSION -->

			<OnCreate>
			</OnCreate>

			<!-- BRIEFING, ACCEPTING, DECLINING -->

			<OnAccepted>

				;	Called if the player accepts the mission.
				;
				;	gSource: Mission object.

				(block (
					;	Pick a random location for the ship in trouble

					(ownerObj (objGetObjByID (msn@ gSource 'ownerID)))
					(shipPos (sysVectorRandom ownerObj (msn@ gSource 'destDist) 70))

					destObj
					)

					;	Create a ship in trouble

					(setq destObj (sysCreateShip (msn@ gSource 'destClass) shipPos &svCommonwealth; &evCMVolunteer03Freighter;))
					(shpOrder destObj 'hold)
					(msnSet@ gSource 'destID (objGetID destObj))
					(msnRegisterForEvents gSource destObj)

					;	Ship's weapons are damaged

					(enum (objGetItems destObj "wI") theItem
						(block ()
							(objAddOverlay destObj &ovDamagedSiteSmall; (obj@ destObj theItem 'pos) 180 9000)
							(objSet@ destObj theItem 'damaged True)
							)
						)

					(msnRegisterForEvents gSource gPlayerShip)
					(msnSet@ gSource 'status 'respond)
					)

			</OnAccepted>

			<!-- RUNNING THE MISSION -->

			<OnSetPlayerTarget>

				;	Called to refresh the player's target. Always called right 
				;	after the player accepts the mission. May be called at 
				;	other times (e.g., after the player returns to the system).
				;
				;	gSource: Mission object.
				;	aReason:
				;		'accepted: Mission has been accepted
				;		'debriefed: Player has been debriefed
				;		'failure: Mission failed
				;		'inProgress: Player visited station while mission in progress
				;		'newSystem: Player is in a new system
				;		'success: Mission completed successfully

				(block (
					(status (msn@ gSource 'status))
					)
					(switch
						(= status 'respond)
							(rpgSetTarget gSource aReason (objGetObjByID (msn@ gSource 'destID)) 'dock)

						(= status 'defend)
							(rpgSetTarget gSource aReason (objGetObjByID (msn@ gSource 'destID)) 'escort)

						(= status 'transport)
							(rpgSetTarget gSource aReason (objGetObjByID (msn@ gSource 'ownerID)) 'dock)

						(rpgSetTarget gSource aReason (objGetObjByID (msn@ gSource 'ownerID)) 'dock)
						)
					)
			</OnSetPlayerTarget>

			<OnPlayerResponds>
				(block (
					(destObj (objGetObjByID (msn@ gSource 'destID)))
					(rejuvTank (itmCreate &itRejuvTankPatient; 1))

					enemies
					)

					;	Put rejuv tank on player's ship

					(objAddItem gPlayerShip rejuvTank)
					(setq rejuvTank (objSet@ gPlayerShip rejuvTank 'missionID (objGetID gSource)))

					(msnSet@ gSource 'rejuvTankStatus 'transport)

					;	Freighter is attacked by pirates.

					(setq enemies
						(sysCreateEncounter &tbCMVolunteer03Pirates; {
							target: destObj
							distance: 90
							})
						)

					(enum enemies theObj
						(block ()
							(msnRegisterForEvents gSource theObj)
							(objSetData theObj 'missionID (objGetID gSource))
							)
						)
					(msnSet@ gSource 'enemiesLeft (count enemies))

					;	Set mission state

					(msnSet@ gSource 'status 'defend)
					(msnSetPlayerTarget gSource)
					)
			</OnPlayerResponds>

			<OnRejuvPatientStatusChanged>
				(block (
					(rejuvTank (@ gData 'item))
					(newStatus (@ gData 'status))
					)
					(switch
						(= newStatus 'critical)
							(block ()
								;	Switch mission status to "transport" if not
								;	already.

								(if (= (msn@ gSource 'status) 'defend)
									(block ()
										(objSendMessage gPlayerShip Nil (msnTranslate gSource 'msgTransportImmediately {
											stationName: (objGetName (objGetObjByID (msn@ gSource 'ownerID)))
											}))

										(msnSet@ gSource 'status 'transport)
										(msnSetPlayerTarget gSource)
										)
									)
								)

						(= newStatus 'dead)
							(block (
								(destObj (objGetObjByID (msn@ gSource 'destID)))
								)
								(msnSet@ gSource 'rejuvTankStatus 'dead)

								;	If we still need to defend the freighter, then
								;	tell the player.

								(if (and (gr (msn@ gSource 'enemiesLeft) 0)
										(= (msn@ gSource 'status) 'transport)
										destObj
										)
									(block ()
										(objSendMessage gPlayerShip (msnTranslate gSource destObj 'msgDefendShip))

										(msnSet@ gSource 'status 'defend)
										(msnSetPlayerTarget gSource)
										)
									)
								)
						)
					)
			</OnRejuvPatientStatusChanged>

			<OnInProgressUndock>

				;	Called after the player undocks after getting the InProgress
				;	message.
				;
				;	gSource: Mission object.

				(block (
					(rejuvTankStatus (msn@ gSource 'rejuvTankStatus))
					)
					;	If we've deal with the rejuv tank patient, then we don't
					;	need any more messages.

					(if (or (= rejuvTankStatus 'dead) (= rejuvTankStatus 'rescued))
						(msnSet@ gSource 'rejuvTankMsg True)
						)
					)

			</OnInProgressUndock>

			<OnObjDestroyed>

				;	Called when an object is destroyed, but only if we have 
				;	called msnRegisterForEvents on the object.
				;
				;	gSource: Mission object.
				;	aObjDestroyed: Object that was destroyed
				;	aDestroy: True if object was destroyed (as opposed to left 
				;		system)
				;	aDestroyReason:
				;		'ascended
				;		'custom
				;		'damage
				;		'disintegration
				;		'ejecta
				;		'enteredStargate
				;		'explosion
				;		'gravity
				;		'playerCreatedExplosion
				;		'powerFailure
				;		'radiationPoisoning
				;		'removedFromSystem
				;		'runningOutOfFuel
				;		'self
				;		'shatter
				;		'weaponMalfunction
				;	aDestroyer: Object that destroyed it.
				;	aOrderGiver: Object that controlled destroyer, e.g.,
				;		if destroyer is an auton.
				;	aWreckObj: Wreck left behind (may be nil)

				(switch
					(= (objGetID aObjDestroyed) (msn@ gSource 'destID))
						(switch
							(not aDestroy)
								(msnSuccess gSource)

							(and gPlayerShip (= aOrderGiver gPlayerShip))
								(msnFailure gSource { result:'destroyedByPlayer })

							(msnFailure gSource { result:'destroyed })
							)

					(= (objGetData aObjDestroyed 'missionID) (objGetID gSource))
						(if (leq (msnInc@ gSource 'enemiesLeft -1) 0)
							(block (
								(destObj (objGetObjByID (msn@ gSource 'destID)))
								(ownerObj (objGetObjByID (msn@ gSource 'ownerID)))
								)
								(objSendMessage gPlayerShip destObj (msnTranslate gSource 'msgThanks))

								(shpCancelOrders destObj)
								(shpOrder destObj 'dock ownerObj)
								(shpOrder destObj 'wait (random 5 10))
								(shpOrder destObj 'gate)

								(msnSuccess gSource { result:'defended })
								)
							)
					)
				
			</OnObjDestroyed>

			<OnObjDocked>

				;	Called when an object docks with another object. Call
				;	msnRegisterForEvents on the object to receive this event.
				;
				;	gSource: Mission object.
				;	aObjDocked: Object that docked
				;	aDockTarget: Object that it docked with

				(block (
					(missionID (objGetID gSource))

					rejuvTank
					)
					(switch
						;	If the player docks with the metropolis and she has the
						;	rejuv tank, then they're rescued.

						(and (= aObjDocked gPlayerShip)
								(= (objGetID aDockTarget) (msn@ gSource 'ownerID))
								(setq rejuvTank (match (objGetItems gPlayerShip "* +unid:&itRejuvTankPatient;;") theItem
									(= (itm@ theItem 'missionID) missionID)
									))
								)
							(block (
								(patientStatus (itm@ rejuvTank 'status))
								destObj
								)
								;	Remove the tank from the ship no matter what

								(objRemoveItem gPlayerShip rejuvTank)

								;	If the patient is still alive, then we succeed

								(if (!= patientStatus 'dead)
									(msnSet@ gSource 'rejuvTankStatus 'rescued)
									)

								;	Return to defend freighter, if necessary

								(if (and (gr (msn@ gSource 'enemiesLeft) 0)
										(= (msn@ gSource 'status) 'transport)
										(setq destObj (objGetObjByID (msn@ gSource 'destID)))
										)
									(block ()
										(objSendMessage gPlayerShip (msnTranslate gSource destObj 'msgDefendShip))

										(msnSet@ gSource 'status 'defend)
										(msnSetPlayerTarget gSource)
										)
									)
								)
						)
					)

			</OnObjDocked>

			<!-- MISSION COMPLETE -->

			<OnCompleted>

				;	Called when the mission ends (generally because msnSuccess 
				;	or msnFailure were called).
				;
				;	gSource: Mission object.
				;	gData: Arbitrary data passed in to msnSuccess or msnFailure
				;	aReason:
				;		'failure: Mission failed
				;		'success: Mission completed successfully

				(block (
					destObj
					)
					(if (@ gData 'result)
						(msnSet@ gSource 'status (@ gData 'result))
						)

					;	If we've failed but the freighter is still alive, then 
					;	we destroy it. This can happen if we leave the system 
					;	for too long.

					(if (and (= aReason 'failure)
							(setq destObj (objGetObjByID (msn@ gSource 'destID)))
							)
						(block ()
							(objRemove destObj)
							(msnSet@ gSource 'status 'destroyed)
							)
						)
					)

			</OnCompleted>

			<OnReward>

				;	Called when the mission was successful, just before showing
				;	the debriefing screen.
				;
				;	gSource: Mission object.
				;	gData: Arbitrary data passed to msnReward
				;
				;	This event can return an optional structure to control 
				;	debriefing. The struct has the following fields:
				;
				;	nextScreen: The screen to show after debrief, OR
				;		'forceUndock
				;	nextScreenData: Data to pass to scrShowScreen.

				(block (
					(reward (msn@ gSource 'reward))
					(rewardBonus 
						(if (= (msn@ gSource 'rejuvTankStatus) 'rescued)
							(msn@ gSource 'rewardBonus)
							0
							)
						)
					(totalReward (+ reward rewardBonus))
					(currency (msn@ gSource 'rewardCurrency))
					)
					;(dbgOutput "Reward: " reward)
					;(dbgOutput "Bonus: " rewardBonus)
					;(dbgOutput "Total: " totalReward)

					(if (gr totalReward 0)
						(rpgMissionRewardPayment totalReward currency)
						)
					)

			</OnReward>

			<OnGlobalSystemDiagnostics>
				(if (= (sysGetNode) 'SE)
					(block (
						(waitTime 200)
						startonObj missionObj freighterObj
						)
						(diagCreatePlayerShip)
						(setq startonObj (sysFindObject gPlayerShip "TAN +unid:&stStartonEridani;"))

						;	Mission set up

						(diagAssert (setq missionObj (msnCreate &msCMVolunteer03; startonObj)) "Militia Volunteer 03: Unable to create.")
						(diagAssert (msnAccept missionObj) "Militia Volunteer 03: Unable to accept.")

						(diagAssert (= (msn@ missionObj 'status) 'respond) "Militia Volunteer 03: Status not set to 'respond.")
						(diagAssert (setq freighterObj (objGetObjByID (msn@ missionObj 'destID))) "Militia Volunteer 03: Freighter not created.")

						(diagUpdateSystem 1)

						;	Player docks with freighter to get rejuv tank

						(msnFireEvent missionObj 'OnPlayerResponds)
						(diagAssert (objGetItems gPlayerShip "* +unid:&itRejuvTankPatient;") "Militia Volunteer 03: No rejuv tank.")
						(diagAssert (gr (msn@ missionObj 'enemiesLeft) 0) "Militia Volunteer 03: No enemy ships.")
						(diagAssert (= (msn@ missionObj 'rejuvTankStatus) 'transport) "Militia Volunteer 03: Rejuv tank status not set to 'transport.")

						(diagUpdateSystem 1)

						;	Destroy enemy ships

						(enum (sysFindObject Nil "s D:missionID;") theObj
							(if (= (objGetData theObj 'missionID) (objGetID missionObj))
								(objDestroy theObj gPlayerShip)
								)
							)

						(diagAssert (= (msn@ missionObj 'enemiesLeft) 0) "Militia Volunteer 03: Enemy ships not destroyed.")

						(diagUpdateSystem 1)

						;	Return to station

						(shpCancelOrders gPlayerShip)
						(shpOrder gPlayerShip 'dock startonObj)
					
						(loop (and (!= (msn@ missionObj 'rejuvTankStatus) 'rescued)
								(gr waitTime 0)
								)
							(block ()
								(diagUpdateSystem 30)
								(setq waitTime (- waitTime 1))
								)
							)

						(if (!= (msn@ missionObj 'rejuvTankStatus) 'rescued)
							(error "Militia Volunteer 03: Unable to rescue patient.")
							)

						(diagUpdateSystem 1)
						(objRemove missionObj)

						(objRemove gPlayerShip)
						(setq gPlayerShip Nil)
						)
					)
			</OnGlobalSystemDiagnostics>
		</Events>

		<Language>
			<Text id="Name">
				Rescue Commonwealth Ship
			</Text>
			<Text id="Summary">
				(block (
					(status (msn@ gSource 'status))
					(trData {
						reward: (fmtCurrency 'credit (msn@ gSource 'reward))
						stationName: (objGetName (objGetObjByID (msn@ gSource 'ownerID)))
						systemName: (sysGetName)
						})
					)
					(switch
						(= status 'respond)
							(msnTranslate gSource 'textSummary.respond trData)

						(= status 'transport)
							(msnTranslate gSource 'textSummary.transport trData)

						(msnTranslate gSource 'textSummary.defend trData)
						)
					)
			</Text>
			<Text id="Intro">
				(typTranslate (msn@ gSource 'character.missionGiver) 'missionIntro {
					missionObj: gSource
					})
			</Text>
			<Text id="Briefing">
				(block (
					(trData {
						missionNumber: (+ (msn@ gSource 'missionNumber) 1)
						reward: (fmtCurrency 'credit (msn@ gSource 'reward))
						})
					)
					(or
						(typTranslate (msn@ gSource 'character.missionGiver) 'volunteer03.briefing trData)
						(msnTranslate gSource 'textBriefing trData)
						)
					)

				(msnTranslate gSource (cat 'textBriefing. (min (+ (msn@ gSource 'missionNumber) 1) 3)) {
					reward: (fmtCurrency 'credit (msn@ gSource 'reward))
					})
			</Text>
			<Text id="AcceptReply">
				(msnTranslate gSource 'textAcceptReply1 {
					})
			</Text>
			<Text id="DeclineReply">
				(msnTranslate gSource 'textDeclineReply1 {
					})
			</Text>
			<Text id="InProgress">
				(block (
					(missionID (objGetID gSource))
					(rejuvTankStatus (msn@ gSource 'rejuvTankStatus))
					)
					(switch
						;	If we need to respond

						(= (msn@ gSource 'status) 'respond)
							(msnTranslate gSource 'textInProgress.defend)

						;	If we've already handled the rejuv tank status, then
						;	we just tell the player to help defend

						(msn@ gSource 'rejuvTankMsg)
							(msnTranslate gSource 'textInProgress.defend)

						;	If the patient has been rescued, then good work!

						(= rejuvTankStatus 'rescued)
							(msnTranslate gSource 'textInProgress.rescued)

						(= rejuvTankStatus 'dead)
							(msnTranslate gSource 'textInProgress.dead)

						;	If we no longer have the patient, then we need it back.

						(not (match (objGetItems gPlayerShip "* +unid:&itRejuvTankPatient;;") theItem
								(= (itm@ theItem 'missionID) missionID)
								))
							(msnTranslate gSource 'textInProgress.lostRejuvTank)

						(msnTranslate gSource 'textInProgress.defend)
						)
					)
			</Text>
			<Text id="SuccessDebrief">
				(block (
					(status (msn@ gSource 'status))
					(rejuvTankStatus (msn@ gSource 'rejuvTankStatus))
					(trData {
						reward: (fmtCurrency 'credit (msn@ gSource 'reward))
						rewardBonus: (fmtCurrency 'credit (msn@ gSource 'rewardBonus))
						})
					)
					(switch
						(= rejuvTankStatus 'rescued)
							(if (msn@ gSource 'rejuvTankMsg)
								(msnTranslate gSource 'textSuccessDebrief.defendedAndrescuedPreviously trData)
								(msnTranslate gSource 'textSuccessDebrief.defendedAndrescued trData)
								)

						(if (msn@ gSource 'rejuvTankMsg)
							(msnTranslate gSource 'textSuccessDebrief.defendedAndKilledPreviously trData)
							(msnTranslate gSource 'textSuccessDebrief.defendedAndKilled trData)
							)
						)
					)
			</Text>
			<Text id="FailureDebrief">
				(block (
					(status (msn@ gSource 'status))
					(rejuvTankStatus (msn@ gSource 'rejuvTankStatus))
					)
					(switch
						(= status 'destroyedByPlayer)
							(msnTranslate gSource 'textFailureDebrief.destroyedByPlayer)

						(and (= status 'destroyed) (= rejuvTankStatus 'rescued))
							(if (msn@ gSource 'rejuvTankMsg)
								(msnTranslate gSource 'textFailureDebrief.destroyedAndRescuedPreviously)
								(msnTranslate gSource 'textFailureDebrief.destroyedAndRescued)
								)

						(if (msn@ gSource 'rejuvTankMsg)
							(msnTranslate gSource 'textFailureDebrief.destroyedAndKilledPreviously)
							(msnTranslate gSource 'textFailureDebrief.destroyedAndKilled)
							)
						)
					)
			</Text>

			<Text id="textSummary.respond">
			
				Respond to a freighter's distress call.

				System: %systemName%\n
				Payment: %reward%

			</Text>
			<Text id="textSummary.transport">
			
				A freighter was attacked by pirates and its chief engineer was
				injured. Transport him back to %stationName% for urgent medical
				treatment.

				System: %systemName%\n
				Payment: %reward%

			</Text>
			<Text id="textSummary.defend">

				Defend a freighter under attack by pirates.

				System: %systemName%\n
				Payment: %reward%
			
			</Text>
			<Text id="textBriefing">

				The captain looks down at a screen.

				"I want you to investigate a distress call sent out by a 
				Commonwealth freighter. It sounds like they're under attack.

				"We'll pay %reward% if you help them. Clear?"

			</Text>
			<Text id="textAcceptReply1">

				"I'll send the coordinates to your computer. OK, get out of 
				here."

			</Text>
			<Text id="textDeclineReply1">

				"Ah, Hell! What are you doing here then? Stop wasting my time!"

			</Text>
			<Text id="textInProgress.defend">

				"What's wrong? You said you could handle this mission! Get back 
				out there and finish the job!"

			</Text>
			<Text id="textInProgress.rescued">

				Medtechs meet you at the docking bay. They look over the rejuv 
				tank and give you a thumbs up.

				"You did good. He's going to be OK. That freighter still needs
				help, though. Better get back out there!"

			</Text>
			<Text id="textInProgress.dead">

				A medtech meets you at the docking bay. She looks over the 
				rejuv tank and shakes her head.

				"He's gone. That freighter still needs help, though. Better get
				back out there!"
			
			</Text>
			<Text id="textInProgress.lostRejuvTank">

				A medtech meets you at the docking bay.

				"Where the hell is my patient? You better get that rejuv tank 
				back or his death will be on your hands!"
			
			</Text>
			<Text id="textSuccessDebrief.defendedAndRescued">

				Medtechs rush to meet you. They look over the rejuv tank and 
				give you a thumbs up.

				"Good work, %name%. That was a tricky situation, but you 
				handled it well. You've earned %reward% plus %rewardBonus% as a
				bonus for rescuing the freighter's chief engineer.

			</Text>
			<Text id="textSuccessDebrief.defendedAndRescuedPreviously">

				"Good work, %name%. That was a tricky situation, but you 
				handled it well. You've earned %reward% plus %rewardBonus% as a
				bonus for rescuing the freighter's chief engineer.

			</Text>
			<Text id="textSuccessDebrief.defendedAndKilled">

				A medtech meets you at the docking bay. She looks over the rejuv
				tank but shakes her head.

				"He didn't make it. But at least you rescued the freighter and
				the rest of its crew.

				"You've earned %reward% for responding to the distress call."

			</Text>
			<Text id="textSuccessDebrief.defendedAndKilledPreviously">

				"That was a tricky situation. You had to choose between saving
				one person or the rest of the freighter crew. You made the right
				call.

				"You've earned %reward% for responding to the distress call."

			</Text>
			<Text id="textFailureDebrief.destroyedByPlayer">

				"Your incompetence doomed the freighter! Get out of my sight!"

			</Text>
			<Text id="textFailureDebrief.destroyedAndRescued">

				Medtechs rush to meet you. They look over the rejuv tank and 
				give you a thumbs up.

				"That was a tricky situation. Even though you saved the chief
				engineer, you lost the freighter and the remainder of its crew.

				"I'm not sure it was worth it."

			</Text>
			<Text id="textFailureDebrief.destroyedAndRescuedPreviously">

				"That was a tricky situation. Even though you saved the chief
				engineer, you lost the freighter and the remainder of its crew.

				"I'm not sure it was worth it."

			</Text>
			<Text id="textFailureDebrief.destroyedAndKilled">

				A medtech meets you at the docking bay. She takes one look at
				the rejuv tank and shakes her head.

				"He didn't make. And the freighter is dead too, isn't it? Looks
				like you failed completely."

			</Text>
			<Text id="textFailureDebrief.destroyedAndKilledPreviously">

				"What a disaster! You lost the freighter and the wounded chief
				engineer! I don't think you could have kacked that up any worse
				if you tried."

			</Text>
			<Text id="SuccessMsg">
				Mission complete!
			</Text>

			<Text id="msgTransportImmediately">
				Transport patient back to %stationName%!
			</Text>
			<Text id="msgDefendShip">
				We're still under attack! Help us!
			</Text>
			<Text id="msgThanks">
				Thanks for defending us!
			</Text>

			<Code id="dlgRespond">
				(block (
					(missionObj (@ (msnFind "a +unid:&msCMVolunteer03;;") 0))
					)
					(list
						{	descID: 'textRespond1			labelID: 'actionRespond1
							data: {
								stationName: (objGetName (objGetObjByID (msn@ missionObj 'ownerID)))
								}
							}
						{	descID: 'textRespond2			labelID: 'actionRespond2

							nextPage: 'exitScreen
							code: (lambda ()
								(block (
									)

									;	Mission continues

									(msnFireEvent missionObj 'OnPlayerResponds)
									)
								)
							}
						)
					)
				
			</Code>
			<Text id="textRespond1">

				You enter the airlock and see an old-style rejuv tank. An 
				unconscious man floats inside; a vitals monitor beeps steadily.

				The freighter's captain stands next to the tank. She greets you
				as you enter.

				"We got ambushed by pirates a few hours ago, and my chief 
				engineer took a hit. He's stable for now, but he's going to need
				medical	attention at %stationName%."
			
			</Text>
			<String id="actionRespond1">"[P]ut him on my ship. I'll take him."</String>
			<Text id="textRespond2">
			
				Two other crewmembers enter the airlock. One of them waves an 
				infopad at the captain. "We've got incoming, captain! Multiple
				signals. High burn."

				The captain snaps to attention. "We could use some help, %name%.
				Just weed out some targets for us and give us a fighting chance.

				"But if the chief engineer starts degrading, take him to safety,
				all right?"

			</Text>
			<String id="actionRespond2">"[U]nderstood!"</String>

			<Code id="dlgNothing">
				(list
					{	descID: 'textNothing1 }
					)
			</Code>
			<Text id="textNothing1">

				The airlock is closed.
			
			</Text>

			<Code id="dlgDefend">
				(list
					{	descID: 'textDefend1 }
					)
			</Code>
			<Text id="textDefend1">

				A crewmember meets you at the airlock.

				"What the hell are you doing? Get out there and fight some 
				pirates!"
			
			</Text>
		</Language>
	</MissionType>

	<Type unid="&evCMVolunteer03Freighter;">
		<Events>
			<GetDockScreen>
				(block (
					(missionObj (@ (msnFind "a +unid:&msCMVolunteer03;;") 0))
					(status (msn@ missionObj 'status))
					)
					(switch
						(= status 'respond)
							{	
								screen: &dsRPGDialog;
								priority: 10
								data: {
									translateType: &msCMVolunteer03;
									dialogID: 'dlgRespond
									}
								}

						(and missionObj (gr (msn@ missionObj 'enemiesLeft) 0))
							{
								screen: &dsRPGDialog;
								priority: 10
								data: {
									translateType: &msCMVolunteer03;
									dialogID: 'dlgDefend
									}
								}

						{
							screen: &dsRPGDialog;
							data: {
								translateType: &msCMVolunteer03;
								dialogID: 'dlgNothing
								}
							}
						)
					)
			</GetDockScreen>
		</Events>
	</Type>

	<ShipTable UNID="&tbCMVolunteer03Pirates;">
		<LevelTable>

			<!-- Level 1 -->

			<Ship	levelFrequency="crv-- -----"	class="&scCorsair;"		count="2d4+1"	orders="attack"	sovereign="&svPirates;"/>
			<Ship	levelFrequency="crv-- -----"	class="&scViking;"		count="2"		orders="attack"	sovereign="&svPirates;"/>

			<!-- Level 2 -->

			<Ship	levelFrequency="-crv- -----"	class="&scCorsair;"		count="2d6"		orders="attack"	sovereign="&svPirates;"/>
			<Group	levelFrequency="-crv- -----">
				<Ship								class="&scViking;"		count="2"		orders="attack"	sovereign="&svPirates;"/>
				<Ship								class="&scCorsair;"		count="2d4"		orders="attack"	sovereign="&svPirates;"/>
			</Group>

			<!-- Level 3 -->

			<Ship	levelFrequency="--crv -----"	class="&scCorsair;"		count="4d6+1"	orders="attack"	sovereign="&svPirates;"/>
			<Group	levelFrequency="--crv -----">
				<Ship								class="&scViking;"		count="2d4"		orders="attack"	sovereign="&svPirates;"/>
				<Ship								class="&scCorsair;"		count="2d6"		orders="attack"	sovereign="&svPirates;"/>
			</Group>
			<Group	levelFrequency="--crv -----">
				<Ship								class="&scCorsair-II;"	count="2d2"		orders="attack"	sovereign="&svPirates;"/>
				<Ship								class="&scCorsair;"		count="2d6"		orders="attack"	sovereign="&svPirates;"/>
			</Group>
			<Group	levelFrequency="--crv -----">
				<Ship								class="&scCorsair-II;"	count="2"		orders="attack"	sovereign="&svPirates;"/>
				<Ship								class="&scViking;"		count="2d4"		orders="attack"	sovereign="&svPirates;"/>
			</Group>

			<!-- Level 4 -->

			<Ship	levelFrequency="---cr v----"	class="&scViking;"		count="4d6+1"	orders="attack"	sovereign="&svPirates;"/>
			<Ship	levelFrequency="---cr v----"	class="&scCorsair-II;"	count="2d6"		orders="attack"	sovereign="&svPirates;"/>
			<Group	levelFrequency="---cr v----">
				<Ship								class="&scCorsair-II;"	count="2d6"		orders="attack"	sovereign="&svPirates;"/>
				<Ship								class="&scViking;"		count="2d6"		orders="attack"	sovereign="&svPirates;"/>
			</Group>

			<!-- Level 5+ -->

			<Group	levelFrequency="----c rvvvv">
				<Ship								class="&scCharonFrigateRaider;"		count="1"		orders="attack"	sovereign="&svPirates;"/>
			</Group>
		</LevelTable>
	</ShipTable>

</TranscendenceModule>
